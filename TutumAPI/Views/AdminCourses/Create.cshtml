@model TutumAPI.Models.Course

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Course</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form action="BufferedSingleFileUploadPhysical/?handler=Upload" 
              enctype="multipart/form-data" onsubmit="AJAXSubmit(this);return false;" 
              method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PreviewPath" class="control-label"></label>
                <input asp-for="PreviewPath" class="form-control" />
                <span asp-validation-for="PreviewPath" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPremiumOnly" /> @Html.DisplayNameFor(model => model.IsPremiumOnly)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        <script>
          async function AJAXSubmit (oFormElement) {
            var resultElement = oFormElement.elements.namedItem("result");
            const formData = new FormData(oFormElement);

            try {
            const response = await fetch(oFormElement.action, {
              method: 'POST',
              body: formData
            });

            if (response.ok) {
              window.location.href = '/';
            }

            resultElement.value = 'Result: ' + response.status + ' ' + 
              response.statusText;
            } catch (error) {
              console.error('Error:', error);
            }
          }
        </script>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
